#!/usr/bin/env python3
"""
Simplified Video Bot for testing without database.
"""
import asyncio
import logging
import os
from dotenv import load_dotenv

from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.types import Message
from aiogram.filters import Command

# Load environment variables
load_dotenv()

# Configure logging
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
)
logger = logging.getLogger(__name__)

# Bot configuration
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
if not BOT_TOKEN:
    logger.error("TELEGRAM_BOT_TOKEN not found in environment variables!")
    exit(1)

# Create bot and dispatcher
bot = Bot(
    token=BOT_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher()


@dp.message(Command("start"))
async def start_handler(message: Message):
    """Handle /start command."""
    await message.answer(
        "üé¨ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VideoGenerator3000!</b>\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤–∏–¥–µ–æ.\n\n"
        "üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "/help - –°–ø—Ä–∞–≤–∫–∞\n"
        "/status - –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞\n\n"
        "üìπ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≤–∏–¥–µ–æ –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏!"
    )


@dp.message(Command("help"))
async def help_handler(message: Message):
    """Handle /help command."""
    await message.answer(
        "‚ùì <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>\n\n"
        "üé• <b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>\n"
        "1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ —Ñ–∞–π–ª –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube\n"
        "2. –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –≤–∏–¥–µ–æ\n"
        "3. –ü–æ–ª—É—á–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n\n"
        "‚öôÔ∏è <b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
        "‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç Shorts (9:16)\n"
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å—É–±—Ç–∏—Ç—Ä—ã\n"
        "‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π\n\n"
        "‚ùó <b>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</b> –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."
    )


@dp.message(Command("status"))
async def status_handler(message: Message):
    """Handle /status command."""
    await message.answer(
        "‚úÖ <b>–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞</b>\n\n"
        "üü¢ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç\n"
        "üîß –†–µ–∂–∏–º: –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π (–±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö)\n"
        "üìä –í–µ—Ä—Å–∏—è: 1.0.0-simple\n\n"
        "–î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–ª–Ω—É—é –≤–µ—Ä—Å–∏—é."
    )


@dp.message()
async def message_handler(message: Message):
    """Handle all other messages."""
    if message.video:
        await message.answer(
            "üé¨ –ü–æ–ª—É—á–µ–Ω–æ –≤–∏–¥–µ–æ!\n\n"
            "‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞.\n"
            "–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.\n\n"
            "–î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:\n"
            "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker\n"
            "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: <code>docker-compose up -d</code>"
        )
    elif message.text and ("youtube.com" in message.text or "youtu.be" in message.text):
        await message.answer(
            "üîó –ü–æ–ª—É—á–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ YouTube!\n\n"
            "‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞.\n"
            "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Å YouTube –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.\n\n"
            "–î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏:\n"
            "1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker\n"
            "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: <code>docker-compose up -d</code>"
        )
    else:
        await message.answer(
            "ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø VideoGenerator3000.\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ:\n"
            "üìπ –í–∏–¥–µ–æ —Ñ–∞–π–ª\n"
            "üîó –°—Å—ã–ª–∫—É –Ω–∞ YouTube\n"
            "‚ùì /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
        )


async def main():
    """Main function."""
    logger.info("üöÄ Starting VideoGenerator3000 (Simple Mode)...")
    
    try:
        # Start polling
        await dp.start_polling(bot)
    except KeyboardInterrupt:
        logger.info("üëã Bot stopped by user")
    except Exception as e:
        logger.error(f"‚ùå Bot error: {e}")
    finally:
        await bot.session.close()


if __name__ == "__main__":
    asyncio.run(main())